<launch>
    <!-- Load the hello_ros_robot URDF model into the parameter server as robot_description-->
    <param name="robot_description" textfile="$(find hello_ros)/urdf/hello_gazebo_robot_3mod.urdf" />
    <!-- Start Gazebo with an empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch"/>
    <!-- Spawn a hello_ros_robot in Gazebo, taking the description from the
    parameter server -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description -urdf -model hello_ros_robot" />
    
    <!-- Required to load the contents of the file controllers_simple2.yaml via rosparm
    ino the ROS parameter server -->
    <rosparam file="$(find hello_ros)/urdf/controllers_simple2.yaml" command="load"/>

    <!-- we need to spawn our newly configured controller. By default ros_control 
    starts without any controllers running -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="arm_controller"/>
    <!-- Convert /joint_states messages published by Gazebo to /tf messages,
    e.g., for rviz-->
    <node name="robot_state_publisher" pkg="robot_state_publisher"
    type="robot_state_publisher"/>
</launch>